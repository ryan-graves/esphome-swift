name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SWIFT_VERSION: '6.0'

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
    
    - name: Swift Version
      run: swift --version
    
    - name: Build
      run: swift build -v
    
    - name: Run Tests
      run: swift test -v
    
    - name: Build Release
      run: swift build -c release -v

  lint:
    name: SwiftLint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: SwiftLint
      uses: norio-nomura/action-swiftlint@3.2.1
      with:
        args: --strict

  code-coverage:
    name: Code Coverage
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
    
    - name: Run Tests with Coverage
      run: |
        swift test --enable-code-coverage
        xcrun llvm-cov export -format="lcov" \
          .build/debug/ESPHomeSwiftPackageTests.xctest/Contents/MacOS/ESPHomeSwiftPackageTests \
          -instr-profile .build/debug/codecov/default.profdata > coverage.lcov
    
    - name: Upload Coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.lcov
        fail_ci_if_error: false

  validate-examples:
    name: Validate Example Configurations
    runs-on: macos-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Swift
      uses: swift-actions/setup-swift@v2
      with:
        swift-version: ${{ env.SWIFT_VERSION }}
    
    - name: Build CLI
      run: swift build --product esphome-swift
    
    - name: Validate Examples
      run: |
        for example in Examples/*.yaml; do
          echo "Validating $example"
          .build/debug/esphome-swift validate-command "$example"
        done